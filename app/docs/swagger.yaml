definitions:
  api.AuthenticationInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  api.AuthenticationResponse:
    properties:
      token:
        type: string
    type: object
  api.CreateSubscriptionInput:
    properties:
      description:
        type: string
      subscriptionName:
        type: string
    type: object
  api.MessageResponse:
    properties:
      message:
        type: string
    type: object
  model.Email:
    properties:
      body:
        type: string
      subject:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: milaguyenlam@gmail.com
    name: Nguyen Thanh Lam
    url: https://github.com/milaguyenlam
  description: This is a newsletter subscription API service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: STRV Newsletter Subscription API
  version: "1.0"
paths:
  /subscription/{subscriptionID}/send:
    post:
      consumes:
      - application/json
      description: Send a newsletter to all subscribers
      operationId: send-newsletter
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionID
        required: true
        type: string
      - description: Email details
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/model.Email'
      produces:
      - application/json
      responses:
        "200":
          description: Message
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      security:
      - Bearer: []
      summary: Send a newsletter
  /subscription/{subscriptionID}/subscribe:
    get:
      description: Subscribe to a newsletter with a given subscription ID
      operationId: subscribe-newsletter
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionID
        required: true
        type: string
      - description: Email to subscribe
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "500":
          description: Error message
          schema:
            $ref: '#/definitions/api.MessageResponse'
      summary: Subscribe to a newsletter
  /subscription/{subscriptionID}/unsubscribe:
    get:
      description: Unsubscribe from a newsletter with a given subscription ID
      operationId: unsubscribe-newsletter
      parameters:
      - description: Subscription ID
        in: path
        name: subscriptionID
        required: true
        type: string
      - description: Email to unsubscribe
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "500":
          description: Error message
          schema:
            $ref: '#/definitions/api.MessageResponse'
      summary: Unsubscribe from a newsletter
  /subscription/create:
    post:
      consumes:
      - application/json
      description: Create a new subscription with the given name and description
      operationId: create-subscription
      parameters:
      - description: subscription input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.CreateSubscriptionInput'
      produces:
      - application/json
      responses:
        "200":
          description: subscriptionId
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      security:
      - Bearer: []
      summary: Create a new subscription
  /user/login:
    post:
      consumes:
      - application/json
      description: Logs in a user
      operationId: login
      parameters:
      - description: Login credentials
        in: body
        name: authInput
        required: true
        schema:
          $ref: '#/definitions/api.AuthenticationInput'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            $ref: '#/definitions/api.AuthenticationResponse'
        "401":
          description: Message
          schema:
            $ref: '#/definitions/api.MessageResponse'
      summary: User Login
  /user/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      operationId: register
      parameters:
      - description: Registration details
        in: body
        name: authInput
        required: true
        schema:
          $ref: '#/definitions/api.AuthenticationInput'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            $ref: '#/definitions/api.AuthenticationResponse'
        "401":
          description: Message
          schema:
            $ref: '#/definitions/api.MessageResponse'
      summary: User Registration
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
